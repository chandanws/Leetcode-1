// 0    0000    0
// -------------
// 1    0001    1
// -------------
// 2    0010    1
// 3    0011    2
// -------------
// 4    0100    1
// 5    0101    2
// 6    0110    2
// 7    0111    3
// -------------
// 8    1000    1
// 9    1001    2
// 10   1010    2
// 11   1011    3
// 12   1100    2
// 13   1101    3
// 14   1110    3
// 15   1111    4
// 倒过来想，一个数 * 2 就是把它的二进制全部左移一位，也就是说 1的个数是相等的。

// 那么我们可以利用这个结论来做。

// res[i /2] 然后看看最低位是否为1即可（上面*2一定是偶数，这边比如15和14除以2都是7，但是15时通过7左移一位并且+1得到，14则是直接左移）

// 所以res[i] = res[i >>1] + (i&1)


public class Solution {
    public int[] countBits(int num) {
        int[] res = new int[num + 1];
        for (int i = 0; i<= num; i++){
            res[i] = res[i>>1] + (i&1); //0>>1==0;
        }
        return res;
    }
}